buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }       // Manejar variables  dentro el archivo
    ext{
        serenityVersion = '2.1.2'
        serenityCucumberVersion = '1.9.45'
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$rootProject.ext.serenityVersion")
    } // Especificamos cual es la dependencia que vamos a necesitar osea un pluggin que ejecuta para la documentacion
} // Clases, tareos o complementos deseamos uilizar

plugins {
    id 'java'
    id 'idea'

}

apply plugin: 'net.serenity-bdd.aggregator'

group 'com.cedaniel200'
version '1.0.0'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {

    testImplementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    testImplementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityCucumberVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.9.1'

    testImplementation 'org.slf4j:slf4j-simple:1.7.7'

} // Importacion de archivos

tasks.withType(Test){
    systemProperties = System.properties as Map<String, ?>
    maxParallelForks = Runtime.runtime.availableProcessors() // numero de procesadores disponibles dependiendo de dodne se ejecute el proyecto
} // Cuando ejecutemos la tarea de test haga el paso de propiedades del ambiente de ejecucion normal a teste

gradle.startParameter.continueOnFailure = true // A pesar de que una prueba falle continue con la siguiente